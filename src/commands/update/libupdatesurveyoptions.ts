import { IPageBuilder, mlstring, SurveyBuilder } from "uask-dom";

export function libUpdateSurveyOptions(
  b: SurveyBuilder,
  name: string,
  section?: mlstring
): IPageBuilder {
  const builder = b.page(name);
  if (section) builder.startSection(section);
  builder
    .question("", "__EPRO__", b.types.yesno)
    .translate("en", "Is this survey an ePRO ?")
    .translate("fr", "Cette étude est-elle un ePRO ?")
    .comment("{.studioWorkflow}")
    .question("", "__SHOW_FILLRATES__", b.types.yesno)
    .translate("en", "Show fillrates on participants ?")
    .translate("fr", "Afficher les taux de remplissage sur les participants ?")
    .comment("{.studioWorkflow}")
    .question("", "__LANGS_TITLE__", b.types.info)
    .translate("en", "Langages options")
    .translate("fr", "Options de langues")
    .comment("{.studioWorkflow.title}")
    .question("", "__AVAILABLE_LANGS__", b.types.text)
    .translate("en", "Available languages")
    .translate("fr", "Langues disponibles")
    .comment("{.studioWorkflow.studioLangSelector.multiple}")
    .question("", "__DEFAULT_LANG__", b.types.text)
    .translate("en", "Default language")
    .translate("fr", "Langue par default")
    .comment("{.studioWorkflow.selectLangs}")
    .question("", "__PARTICIPANT_STRATEGY_TITLE__", b.types.info)
    .translate("en", "Participant code strategy")
    .translate("fr", "Calcul des codes participant")
    .comment("{.studioWorkflow.title}")
    .question("", "__PARTICIPANT_CODE_LENGTH__", b.types.integer)
    .translate("en", "Participant code length")
    .translate("fr", "Longueur du code participant")
    .comment("{.studioWorkflow}")
    .question("", "__PARTICIPANT_CODE_BY_SAMPLE__", b.types.yesno)
    .translate("en", "Calculate participant codes by sample ?")
    .translate("fr", "Calculer les codes participants en fonction du centre ?")
    .comment("{.studioWorkflow}")
    .question("", "__ADVANCED_OPTIONS_TITLE__", b.types.info)
    .translate("en", "Advanced options")
    .translate("fr", "Options avancées")
    .comment("{.studioWorkflow.title}")
    .question("", "__ADVANCED_OPTIONS__", b.types.acknowledge)
    .translate("en", "Advanced options")
    .translate("fr", "Options avancées")
    .comment("{.studioWorkflow}")
    .question("", "__INTERVIEW_DATE_VAR__", b.types.text)
    .translate("en", "Date variable name (visits)")
    .translate("fr", "Variable de date (visites)")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__PHONE_VAR__", b.types.text)
    .translate("en", "Phone number variable")
    .translate("fr", "Variable pour les numéros de téléphone")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__EMAIL_VAR__", b.types.text)
    .translate("en", "Email variable")
    .translate("fr", "Variable pour les emails")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__CONSENT_VAR__", b.types.text)
    .translate("en", "Consent variable")
    .translate("fr", "Variable pour le consentement")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__UNIT_SUFFIX__", b.types.text)
    .translate("en", "Unit suffix")
    .translate("fr", "Suffixe des unités")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__INC_VAR__", b.types.text)
    .translate("en", "Inclusion variable code")
    .translate("fr", "Code de la variable d'inclusion")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper")
    .question("", "__SIGN_VAR__", b.types.text)
    .translate("en", "Signature variable code")
    .translate("fr", "Code de la variable de signature")
    .comment("{.studioWorkflow}")
    .visibleWhen("__ADVANCED_OPTIONS__ == @ACK")
    .memorize()
    .letterCase("upper");
  if (section) builder.endSection();
  return builder;
}
